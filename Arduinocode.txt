#include <ESP8266HTTPClient.h>
#include <SoftwareSerial.h>
#include <ESP8266WiFi.h>
#include <ThingSpeak.h>

SoftwareSerial NodeMCU(D2,D3);
int a=1;
float mq135=0;
float mq2=0;
float mq4=0;
const char* ssid     = "h";
const char* password = "sowmya1234";
const char* host = "api.thingspeak.com";
const String channelsAPIKey = "NOFA4GILUHJQ7145";
WiFiClient client;
WiFiServer server(80);
void startWiFi();
void updateChannels();
String tsData;
int Odour;
int rose=0;

void setup(){
  Serial.begin(9600);
  NodeMCU.begin(4800);
  pinMode(D2,INPUT);
  pinMode(D3,OUTPUT);

   ThingSpeak.begin(client);
  delay(10); // Let the module self-initialize
  Serial.println();
  Serial.println();
  startWiFi();
}

void loop(){
  while(NodeMCU.available()>0){
  float val = NodeMCU.parseFloat();
  if(NodeMCU.read()== '\n'){
    if(a==1){
      mq135=val;
      Serial.println("mq135");
      Serial.println(mq135);
      if(mq135>80)
      {
        rose=1;
      }
    }
    if(a==2){
      mq2=val;
      Serial.println("mq2");
      Serial.println(mq2);
      if(mq2>80)
      {
        rose=1;
      }
    }
    if(a==3){
      mq4=val;
      Serial.println("mq4");
      Serial.println(mq4);
      if(mq4>80)
      {
        rose=1;
      }
      a=0;
    }
    }
    a=a+1;
    delay(1000);
     }
    sendAndriodValues();
    if(rose==1)
    {
        HTTPClient http;
        http.begin("http://odoract.000webhostapp.com/sms.php");
        int httpCode = http.GET();
    }
    delay(500);
  }

  void sendAndriodValues()
{
  tsData="@&field1="+String(mq135)+"&field2="+String(mq2)+"&field3="+String(mq4);
  Serial.println(tsData);
  delay(1000);
  Serial.print("connecting to ");
Serial.println(host);
delay(500);
 Serial.println("tsData");
 updateChannels();
 Serial.println(tsData);
}


void updateChannels()
{

Serial.println(tsData);

if (client.connect("api.thingspeak.com", 80))
{
client.print("POST /update HTTP/1.1\n");
client.print("Host: api.thingspeak.com\n");
client.print("Connection: close\n");
client.print("X-THINGSPEAKAPIKEY: "+channelsAPIKey+"\n");
client.print("Content-Type: application/x-www-form-urlencoded\n");
client.print("Content-Length: ");
client.print(tsData.length());
client.print("\n\n");
client.print(tsData);

if (client.connected())
{
Serial.println("****************************************");
Serial.println();
Serial.println("Connecting to ThingSpeak...");
while(client.connected() && !client.available()) delay(10); //waits for data
while (client.connected() || client.available())
{
char charIn = client.read();
Serial.print(charIn);
}
Serial.println();
Serial.println();
Serial.println("...disconnected");
Serial.println();
}
}
client.stop();
Serial.flush();
}

void startWiFi()
{
client.stop();
Serial.println();
Serial.println("Connecting  to network...");
WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  delay(1000);
}







